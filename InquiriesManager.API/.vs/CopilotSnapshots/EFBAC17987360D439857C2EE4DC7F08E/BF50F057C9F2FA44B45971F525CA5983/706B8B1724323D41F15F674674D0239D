using InquiriesManager.API.Models;
using Microsoft.EntityFrameworkCore;

namespace InquiriesManager.API.Data
{
    public class InquiriesRepository
    {
        private readonly InquiriesDbContext _context;

        public InquiriesRepository(InquiriesDbContext context)
        {
            _context = context;
        }

        public async Task<List<Inquiry>> GetAllAsync() => await _context.Inquiries.ToListAsync();

        public async Task<Inquiry?> GetByIdAsync(int id) => await _context.Inquiries.FindAsync(id);

        public async Task AddAsync(Inquiry inquiry)
        {
            _context.Inquiries.Add(inquiry);
            await _context.SaveChangesAsync();
        }

        public async Task UpdateAsync(Inquiry inquiry)
        {
            _context.Inquiries.Update(inquiry);
            await _context.SaveChangesAsync();
        }

        public async Task DeleteAsync(int id)
        {
            var inquiry = await _context.Inquiries.FindAsync(id);
            if (inquiry != null)
            {
                _context.Inquiries.Remove(inquiry);
                await _context.SaveChangesAsync();
            }
        }
    }
}
